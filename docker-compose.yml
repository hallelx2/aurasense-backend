services:
  neo4j:
    image: neo4j:5.22.0
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-test1234}
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*
      - NEO4J_server_memory_pagecache_size=512M
      - NEO4J_server_memory_heap_initial__size=512M
      - NEO4J_server_memory_heap_max__size=512M
      - NEO4J_dbms_connector_bolt_advertised__address=:7687
      - NEO4J_dbms_connector_http_advertised__address=:7474
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - aurasense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "-q", "http://localhost:7474"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aurasense-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  graphiti:
    image: zepai/graphiti:latest
    container_name: graphiti
    ports:
      - "${GRAPHITI_PORT:-8080}:8080"
    env_file:
      - .env
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - GRAPHITI_DB_PATH=/data/graphiti.db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NEO4J_URI=bolt://neo4j:${NEO4J_BOLT_PORT:-7687}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    depends_on:
      neo4j:
          condition: service_healthy
    volumes:
      - graphiti_data:/data
    networks:
      - aurasense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aurasense-backend
    ports:
      - "${PORT:-8000}:8000"
    depends_on:
      - neo4j
      - redis
      - graphiti
    env_file:
      - .env
    environment:
      - NEO4J_HOST=neo4j
      - NEO4J_URI=bolt://neo4j:7687
      - REDIS_URL=redis://redis:6379
      - GRAPHITI_HOST=graphiti
      - HOST=0.0.0.0
    networks:
      - aurasense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  neo4j_data:
  neo4j_logs:
  redis_data:
  graphiti_data:

networks:
  aurasense-network:
    driver: bridge
